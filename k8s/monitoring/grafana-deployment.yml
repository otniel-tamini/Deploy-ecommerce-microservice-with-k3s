apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: ecommerce
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana-oss:latest
          ports:
            - containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: admin
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: password
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: grafana-datasource
              mountPath: /etc/grafana/provisioning/datasources
            - name: grafana-dashboards
              mountPath: /etc/grafana/provisioning/dashboards
            - name: grafana-dashboards-json
              mountPath: /etc/grafana/dashboards
      volumes:
        - name: grafana-storage
          emptyDir: {}
        - name: grafana-datasource
          configMap:
            name: grafana-datasource
        - name: grafana-dashboards
          configMap:
            name: grafana-dashboards
            items:
              - key: dashboards.yaml
                path: dashboards.yaml
        - name: grafana-dashboards-json
          configMap:
            name: grafana-dashboards
            items:
              - key: ecommerce.json
                path: ecommerce.json
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: ecommerce
spec:
  type: NodePort
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 30300
  selector:
    app: grafana
