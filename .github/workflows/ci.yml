name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  maven-build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Run Maven clean compile
      run: mvn clean compile
    
    - name: Run tests
      run: mvn test
    
    - name: Package applications
      run: mvn package -DskipTests
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: jar-artifacts
        path: |
          */target/*.jar
          !*/target/*-sources.jar
          !*/target/*-javadoc.jar
        retention-days: 7

  docker-build:
    runs-on: ubuntu-latest
    needs: maven-build
    if: github.event_name == 'push'
    
    strategy:
      matrix:
        service: 
          - product-service
          - order-service
          - inventory-service
          - discovery-server
          - api-gateway
          - notification-service
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: jar-artifacts
        path: .
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=raw,value=latest,enable={{is_default_branch}}
          type=sha,prefix={{branch}}-
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./${{ matrix.service }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

  security-scan:
    runs-on: ubuntu-latest
    needs: maven-build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: jar-artifacts
        path: .
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  quality-gate:
    runs-on: ubuntu-latest
    needs: [maven-build, security-scan]
    if: always()
    
    steps:
    - name: Check job status
      run: |
        if [[ "${{ needs.maven-build.result }}" != "success" ]]; then
          echo "Maven build failed"
          exit 1
        fi
        if [[ "${{ needs.security-scan.result }}" == "failure" ]]; then
          echo "Security scan failed"
          exit 1
        fi
        echo "All quality checks passed âœ…"